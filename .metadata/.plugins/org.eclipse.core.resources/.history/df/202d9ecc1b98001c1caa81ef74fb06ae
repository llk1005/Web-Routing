package edu.sru.thangiah.webrouting.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

import edu.sru.thangiah.webrouting.domain.Contacts;
import edu.sru.thangiah.webrouting.repository.ContactsRepository;

/*
 * ContactsController
 * 
 * Created 2/1/2022 by Logan Kirkwood
 * Added Update: Ian Black
 * 
 * Description: Handles the Thymeleaf controls for pages
 * dealing with Contacts
 */

@Controller
public class ContactsController {
	
	private ContactsRepository contactsRepository;
	
	public ContactsController(ContactsRepository contactsRepository) {
		this.contactsRepository = contactsRepository;
	}
	
	@RequestMapping({"/contacts"})
    public String showContactList(Model model) {
        model.addAttribute("contacts", contactsRepository.findAll());
        return "contacts";
    }
    

  	@RequestMapping({"/signupcontact"})
      public String showContactSignUpForm(Contacts contacts, BindingResult result) {
          return "add-contact";
    }
      
  	@RequestMapping({"/addcontact"})
  	public String addContact(@Validated Contacts contacts, BindingResult result, Model model) {
  		if (result.hasErrors()) {
  			return "/add/add-contact";
		}
  		
  		contactsRepository.save(contacts);
  		return "redirect:/contacts";
  	}
  	
  	@GetMapping("/deletecontact/{id}")
    public String deleteContact(@PathVariable("id") long id, Model model) {
        Contacts contacts = contactsRepository.findById(id)
          .orElseThrow(() -> new IllegalArgumentException("Invalid contact Id:" + id));
        contactsRepository.delete(contacts);
        return "redirect:/contacts";
    }
  	
  	@GetMapping("/showcontact/{id}")
    public String showUpdateForm(@PathVariable("id") long id, Model model) {
        Contacts contact = contactsRepository.findById(id)
          .orElseThrow(() -> new IllegalArgumentException("Invalid contact Id:" + id));
        
        model.addAttribute("contacts", contact);
        return "view-contact";
    }
  	
  	@GetMapping("/editcontact/{id}")
    public String showEditForm(@PathVariable("id") long id, Model model) {
        Contacts contacts = contactsRepository.findById(id)
          .orElseThrow(() -> new IllegalArgumentException("Invalid contact Id:" + id));
        
        model.addAttribute("contacts", contacts);
        return "add-contact";
    }
  	

}
